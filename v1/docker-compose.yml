services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-tunnel
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx-reverse-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - pixel-pythons
      - portfolio
      - investec
      - ollama
      - nuke
      - strava-bot
      - hevy-progressive-overloader
      - sats-kit-client
      - sats-kit-server
    restart: unless-stopped

  pixel-pythons:
    build: ../pixel-pythons
    container_name: pixel-pythons-app
    restart: unless-stopped

  portfolio:
    build: ../portfolio
    container_name: portfolio-app
    restart: unless-stopped

  investec:
    build: ../investec-transaction-buckets
    container_name: investec-app
    env_file: ../investec-transaction-buckets/.env
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: ollama-app
    restart: unless-stopped

  nuke:
    build: ../btc-transaction-nuke
    container_name: nuke-app
    env_file: ../btc-transaction-nuke/.env
    restart: unless-stopped

  strava-bot:
    build: ../strava-bot-rust
    container_name: strava-bot
    env_file: ../strava-bot-rust/.env
    restart: unless-stopped

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle-app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./dozzle/data:/data
    ports:
      - "9999:8080"
    environment:
      - DOZZLE_AUTH_PROVIDER=simple
    restart: unless-stopped

  hevy-progressive-overloader:
    build: ../hevy-progressive-overloader
    container_name: hevy-progressive-overloader-app
    env_file: ../hevy-progressive-overloader/.env
    restart: unless-stopped

  sats-kit-server:
    build:
      context: ../sats-kit/server
    container_name: sats-kit-server
    environment:
      - RUST_LOG=info
    restart: unless-stopped

  sats-kit-client:
    build:
      context: ../sats-kit/client
    container_name: sats-kit-client
    depends_on:
      - sats-kit-server
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    ports:
      - "${LAN_IP}:53:53/tcp"
      - "${LAN_IP}:53:53/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./pihole/etc-pihole:/etc/pihole
      - ./pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    environment:
      TZ: "UTC"
      FTLCONF_dns_listeningMode: "all"
      FTLCONF_misc_etc_dnsmasq_d: "true"
      FTLCONF_dns_upstreams: "1.1.1.1;8.8.8.8"
      FTLCONF_webserver_api_password: "${PIHOLE_PASSWORD}"
    restart: unless-stopped

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped

  pihole-exporter:
    image: ekofr/pihole-exporter:latest
    container_name: pihole-exporter
    environment:
      PIHOLE_HOSTNAME: "pihole"
      PIHOLE_PORT: "80"
      PIHOLE_PASSWORD: "${PIHOLE_PASSWORD}"
      INTERVAL: "30s"
      PORT: "9617"
    depends_on:
      - pihole
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-storage:/prometheus
    restart: unless-stopped

  postgres:
    image: postgres:18-alpine
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres?sslmode=disable"
    depends_on:
      - postgres
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    command:
      - "--path.rootfs=/host"
    pid: host
    volumes:
      - /:/host:ro,rslave
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  valkey:
    image: valkey/valkey:latest
    container_name: valkey
    ports:
      - "6379:6379"
    volumes:
      - valkey-data:/data
    restart: unless-stopped

  valkey-exporter:
    image: oliver006/redis_exporter:latest
    container_name: valkey-exporter
    environment:
      REDIS_ADDR: "valkey:6379"
    depends_on:
      - valkey
    restart: unless-stopped

volumes:
  grafana-storage: {}
  prometheus-storage: {}
  postgres-data: {}
  valkey-data: {}
